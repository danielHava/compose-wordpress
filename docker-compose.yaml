version: '3.2'

services:

  database:
    image: mysql:9.2
    container_name: database
    restart: unless-stopped
    ports:
      - "3306:3306"
    env_file: db.env
    volumes: 
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network

  wordpress:
    depends_on: 
      - database
    build: 
      context: .
      dockerfile: Dockerfile
    image: homebrew-wordpress
    container_name: wordpress
    restart: unless-stopped
    env_file: wp.env
    volumes:
      - wordpress:/var/www/html
      - ./themes:/var/www/html/wp-content/themes/
      - ./plugins:/var/www/html/wp-content/plugins/
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: nginx:1.26.3-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress:/var/www/html
      - ./themes:/var/www/html/wp-content/themes/
      - ./plugins:/var/www/html/wp-content/plugins/
      - ./config/nginx/mime.types:/etc/nginx/mime.types
      - ./config/nginx/fastcgi.conf:/etc/nginx/fastcgi.conf
      - ./nginx:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network

  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - wordpress:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email &EMAIL& --agree-tos --no-eff-email --staging -d &DOMAIN& -d www.&DOMAIN&

volumes:
  certbot-etc:
  wordpress:
  dbdata:

networks:
  app-network:
    driver: bridge  
